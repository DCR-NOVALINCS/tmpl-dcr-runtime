tmpl request(id: Number, description: String): request, setRequestApproved, setRequestRefused {
    (r: Request)[{ id: id, description: description }]
    (sa: setRequestApproved)[?]
    (sr: setRequestRefused)[?]
    
    sa, sr -->% sa, sr
} => r, sa, sr

tmpl base_approver(sa: setRequestApproved, sr: setRequestRefused): approveRequest, refuseRequest {
    (ar: approveRequest)[?]
    (rr: refuseRequest)[?]
    
    ar, rr -->% ar, rr
    ar -->* sa
    rr *--> sr
    rr -->% r
} => ar, rr

tmpl managerApprover(r: Request, set_approved: setRequestApproved, set_reproved: setRequestRefused): approveRequest, refuseRequest {
    (m: Manager)[{ request: r.value.id }]

    base(sa = set_approved, sr = set_reproved) => mar, mrr
} => mar, mrr

tmpl directorApprover(r: Request, set_approved: setRequestApproved, set_reproved: setRequestRefused): approveRequest, refuseRequest {
    (d: Director)[{ request: r.value.id }]
    
    base_approver(sa = set_approved, sr = set_reproved) => dar, drr

    dar *--> set_approved
    drr *--> set_reproved
} => dar, drr

(ar: addRequest)[?: { id: Number, description: String }]

ar -->> {
    (aa: addApprover)[?: { count: Number, type: String }]
    
    request(id = @trigger.value.id, description = @trigger.value.description) => requestData, setApproved, setReproved
    
    aa -->> {

        managerApprover(r = requestData, set_approved = setApproved, set_reproved = setReproved) => approveRequest, refuseRequest - when @trigger.value.type == 'manager'
        directorApprover(r = requestData, set_approved = setApproved, set_reproved = setReproved) => approveRequest, refuseRequest - when @trigger.value.type == 'director'

    # } - foreach i in 1..@trigger.value
    # Creates a list from 1 to the value of the trigger, ex: -1..3 -> [-1, 0, 1, 2, 3]
    } - foreach i in [0, 1, 2, @trigger.value.count]   
}