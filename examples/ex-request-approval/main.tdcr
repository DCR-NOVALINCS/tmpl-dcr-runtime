tmpl request(id: Number, description: String): Request, setRequestApproved, setRequestRefused {
    (r: Request)[{ id: id, description: description }]
    (sa: setRequestApproved)[?]
    (sr: setRequestRefused)[?]
    
    sa, sr -->% sa, sr
} => r, sa, sr

tmpl base_approver(sa: setRequestApproved, sr: setRequestRefused): approveRequest, refuseRequest {
    (ar: approveRequest)[?]
    (rr: refuseRequest)[?]
    
    ar, rr -->% ar, rr
    ar -->* sa
    rr *--> sr
    rr -->% rr
} => ar, rr

tmpl managerApprover(r: Request, set_approved: setRequestApproved, set_reproved: setRequestRefused): approveRequest, refuseRequest {
    (m: Manager)[{ request: r.value.id }]
    (rr: reviewRequest)[?]

    base_approver(sa = set_approved, sr = set_reproved) => mar, mrr

    rr -->* mar, mrr

} => mar, mrr

tmpl directorApprover(r: Request, set_approved: setRequestApproved, set_reproved: setRequestRefused): approveRequest, refuseRequest {
    (d: Director)[{ request: r.value.id }]
    
    base_approver(sa = set_approved, sr = set_reproved) => dar, drr

    dar *--> set_approved
    drr *--> set_reproved
} => dar, drr

(ar: addRequest)[?: { id: Number, description: String, count: Number }]

ar -->> {
    (aa: addApprover)[?: { count: Number, type: String }]
    
    request(id = @trigger.value.id, description = @trigger.value.description) => requestData, setApproved, setReproved
    
    foreach i in @range(1, @trigger.value.count) {
        aa -->> {
            if @trigger.value.type == "manager" {
                managerApprover(
                    r = requestData, 
                    set_approved = setApproved, 
                    set_reproved = setReproved
                ) => approveRequest, refuseRequest
            } else {
                if @trigger.value.type == "director" {
                    directorApprover(
                        r = requestData, 
                        set_approved = setApproved, 
                        set_reproved = setReproved
                    ) => approveRequest, refuseRequest
                } else {
                    base_approver(
                        sa = setApproved, 
                        sr = setReproved
                    ) => approveRequest, refuseRequest
                }
            }
        }
    }
}