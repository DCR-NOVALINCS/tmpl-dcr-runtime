{1 tmpl-dcr}

{2 About} 

{b t-dcr} is a cli runtime to create and execute DCR graphs with templates in a simple and easy way. 

This project is a part of a master thesis of one of the authors to study and implement a way to abstract and reuse parts of a DCR graph. 

{2 Getting Started}

{3 Prerequisites}

In order to run this project you need to have the following installed:

- {{:https://ocaml.org/docs/install.html} Ocaml} (5.1.1 or newer)
- {{:https://opam.ocaml.org/doc/Install.html} Opam} (2.1.2 or newer)

This are the minimum versions that are guaranteed to work and worked during development and tested with. 

{3 Installation}

To install the project you need to clone the repository and install the dependencies. 

{[
git clone https://github.com/DCR-NOVALINCS/tmpl-dcr-runtime.git
]}

After cloning the repository, make sure to install all the dependencies by running the following command in the [interpreter] directory of the project, where the [Makefile] and the [.opam] file are located.

{[
make
]}

If you don't trust some strange [Makefile] you can run the following command to install the dependencies manually.

{[
opam install . --deps-only
]} 

For some reason you don't have the [tmpl_dcr.opam] file, you can run the following command to install the dependencies.

{[
opam install ocaml dune odoc menhir yojson cmdliner alcotest
]}

And finally, you can build the project by running the following command.

{[
make build
]}

Or [dune build].
And you should be ready to go. üòÅ 

{3 Usage}

To run the program, you can run the following command in the [interpreter] directory of the project.

{[
dune exec tmpl_dcr -- <filename.tdcr>
]}

Where [<filename>] is the name of the file that contains the DCR graph with templates.

You can see some examples in the {{:/examples/}[examples]} directory of the project to see how to write a DCR graph with templates.


{b Notes:}

- The file extension must be [.tdcr] in order to be recognized by the program.
- You can also run the program with the [--help] flag to see the available options or the [--log <level>] to see the debug information.

After running the command, you should see the following prompt.

{[
> 
]}

From this prompt, you can run the following commands defined in the modules of the project.

{!modules: cli}

{2 License}

This project is licensed under the {b MIT License}.

See {{:https://github.com/DCR-NOVALINCS/tmpl-dcr-runtime/blob/main/LICENSE} LICENSE} for more information.
